//> NOTES INDEX
  app.get('/notes', (req, res) => {
    var currentUser = req.user;
    console.log('notes')
    if (req.user) {
    Notes.find({}).lean()
    .then(notes => {
      res.render("notes-index", { notes, currentUser });
    })
  .catch(err => {
    console.log(err.message);
  });
  }else{
    return res.render("unauthorized");
  }
  })

//> NEW NOTES
  app.get('/notes/new',(req, res) => {
      var currentUser = req.user;
      console.log("New Note")
      return res.render('notes-new', {currentUser});
        })

//> CREATE NOTES
  app.post('/notes/new', (req, res) => {
  // INSTANTIATE INSTANCE OF POST MODEL
  const notes = new Notes(req.body);

  // SAVE INSTANCE OF NOTES MODEL TO DB
  notes.save((err, notes) => {
    // REDIRECT TO THE ROOT
    return res.redirect('/notes');
  })
  });
};




// // EDIT ASSIGNMENT
//   app.put("/assignments/:id/edit", (req,res) => {
//     Assignment.findByIdAndUpdate(req.params.id, req.body, {new: true}, (err, assignment) => {
//       //Handle any Database Errors
//       if (err) return console.log(err);
//       return res.send(assignment)
//     })
//       console.log("Assignment Successfully Updated.")
//       res.redirect('/');
// })

// //EDIT ASSIGNMENT
// app.get('/assignments/:id/edit', async (req, res) => {
//   var currentUser = req.user;
//   try {
//     const assignment = await Assignment.findById(req.params.id)
//     res.render('assignment-edit', { assignment, currentUser });
//   } catch {
//     res.redirect('/')
//   }
// })
